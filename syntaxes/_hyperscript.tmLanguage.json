{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "_hyperscript",
  "patterns": [
    {
      "name": "comment.line._hyperscript",
      "begin": "--",
      "end": "$"
    },
    {
      "include": "#commands"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#simpleLiterals"
    }
  ],
  "repository": {
    "keywords": {
      "name": "keyword._hyperscript",
      "patterns": [
        {
          "name": "keyword.control._hyperscript",
          "match": "(?x) \\b(\n  catch|if|else|js|log|put|remove|\n  repeat \\s forever|repeat \\s for|repeat \\s in|repeat \\s while|\n  repeat \\s until \\s event|repeat \\s until|repeat|\n  then|end|while|until|unless|for\n)\\b"
        },
        {
          "name": "keyword.other.command._hyperscript",
          "match": "(?x) \\b(\n  zoop|\n  add|async|call|get|hide|measure|add|async|call|get|hide|measure|\n  return|send|settle|set|show|take|throw|toggle between|toggle|\n  transition|trigger|wait \\s for|wait|fetch|tell|go|increment|\n  decrement|halt|make \\s an|make \\s a|make\n)\\b"
        },
        {
          "name": "keyword.control.feature._hyperscript",
          "match": "(?x) \\b(\n  on|def|js|worker|eventsource|socket|init|behavior|install|require\n)\\b"
        },
        {
          "name": "keyword.operator.expression._hyperscript",
          "match": "(?x) \\b(\n  in|from|to|with|over|into|before|after|\n  at \\s end \\s of|at \\s start \\s of|is \\s an|is \\s a|is \\s not|\n  is|am|as|and|or|no|closest|the|of|first|last|random|\n  local|element|global|on|\n  seconds|milliseconds|(?<= \\s) s|(?<= \\s) ms)\\b"
        },
        {
          "name": "keyword.operator._hyperscript",
          "match": "(?x) \\+|\\s-\\s|\\/|\\*|\\\\|->|<\\s|>|<=|>===|==|=|!==|!=|=|\\.\\.| ([A-Za-z0-9})\\]]|^)\\.|\\%|\\||!|\\$|'s"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double._hyperscript",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "include": "#inside-string"
            }
          ]
        },
        {
          "name": "string.quoted.single._hyperscript",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "include": "#inside-string"
            }
          ]
        },
        {
          "name": "string.interpolated._hyperscript",
          "begin": "`",
          "end": "`",
          "patterns": [
            {
              "include": "#template"
            }
          ]
        },
        {
          "name": "string.unquoted._hyperscript.nakedString",
          "begin": "(?x) (?<=\n  (?:fetch|send|trigger|eventsource\\s+[\\w.:]+\\s+from|socket\\s+[\\w.:]+)\\s+\n) [^'\"`]",
          "end": "\\s"
        }
      ]
    },
    "inside-string": {
      "patterns": [
        {
          "name": "constant.character.escape._hyperscript",
          "match": "\\\\."
        }
      ]
    },
    "template": {
      "patterns": [
        {
          "name": "meta.template.expression._hyperscript",
          "begin": "\\$\\{",
          "end": "\\}",
          "patterns": [
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "simpleLiterals": {
      "patterns": [
        {
          "name": "constant.numeric",
          "match": "\\d+(\\.\\d+)?"
        }
      ]
    }
  },
  "scopeName": "source._hyperscript"
}
